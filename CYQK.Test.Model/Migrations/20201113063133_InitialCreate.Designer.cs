// <auto-generated />
using System;
using CYQK.Test.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CYQK.Test.Model.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20201113063133_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CYQK.Test.Model.Examine.CGSqlist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fbillid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fdepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FirstInput")
                        .HasColumnType("bit");

                    b.Property<string>("FmarkertOrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormInstId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Freqamount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("FrequestContext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fsubmitman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fuseman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TotalCount")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalFee")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.ToTable("t_CGSqlist");
                });

            modelBuilder.Entity("CYQK.Test.Model.Examine.CgsqListentry", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Fbillid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WineCount")
                        .HasColumnType("int");

                    b.Property<decimal>("WineFee")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("WineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.ToTable("t_CgsqListentry");
                });

            modelBuilder.Entity("CYQK.Test.Model.Examine.ExternalLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatchNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FailTotalNum")
                        .HasColumnType("int");

                    b.Property<int>("QueryState")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TakeStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("TakeTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExternalLog");
                });

            modelBuilder.Entity("CYQK.Test.Model.Examine.Reqlist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fbillid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fbillno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fbilltype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fcheckerman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fcheckstep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HandleTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("t_reqlist");
                });
#pragma warning restore 612, 618
        }
    }
}
